[tox]
envlist = py,coverage-report,typing,lint
isolated_build = True

[docker:redis]
image = redis:latest
ports =
    6379:6379/tcp
healthcheck_cmd =
    redis-cli ping
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1

[testenv]
description = Run pytest against {envname}.
docker =
    redis
setenv =
    # Set up test values configurations that must be obtained through
    # environment variables; pytest can override these for individual test runs
    NOTEBURST_ENVIRONMENT_URL = https://test.example.com
    NOTEBURST_GAFAELFAWR_TOKEN = gt-eOfLolxU8FJ1xr08U7RTbg.Jr-KHSeISXwR5GXHiLemhw
    NOTEBURST_REDIS_URL = redis://localhost:6379
deps =
    -r{toxinidir}/requirements/main.txt
    -r{toxinidir}/requirements/dev.txt
commands =
    pytest --cov=noteburst --cov-branch --cov-report= {posargs}

[testenv:coverage-report]
description = Compile coverage from each test run.
skip_install = true
deps = coverage[toml]>=5.0.2
depends =
    py
commands = coverage report

[testenv:typing]
description = Run mypy.
commands =
    mypy src/noteburst tests setup.py

[testenv:lint]
description = Lint codebase by running pre-commit (Black, isort, Flake8).
skip_install = true
deps =
    pre-commit
commands = pre-commit run --all-files

[testenv:run]
description = Run the development server with auto-reload for code changes.
usedevelop = true
setenv =
    SAFIR_PROFILE = development
commands = uvicorn noteburst.main:app --reload


[testenv:docs]
description = Build documentation (HTML) with Sphinx.
commands =
    sphinx-build -n -T -b html -d {envtmpdir}/doctrees docs docs/_build/html
